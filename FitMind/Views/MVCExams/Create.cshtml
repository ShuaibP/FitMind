@model FitMind.Models.Exam

@{
    ViewBag.Title = "Create";
}

<h2>Create Exam Questions</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

  
        @*<h4>Exam Questions</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <br />
    <br />
    <form class="col-sm-12">

        <div class="row">
            <div class="card  animated bounceInUp" @*id="wholeForm"*@ style="border-collapse: collapse; border: 1px solid white">
                <div class="card-block" style="box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);">

                    <div class="col-sm-6">
                        @Html.LabelFor(model => model.name)

                        @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })

                        <br />
                        @Html.LabelFor(model => model.subjectId)
                        @Html.DropDownList("subjectId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.subjectId, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-sm-offset-6">

                        @Html.LabelFor(model => model.points)
                        @Html.EditorFor(model => model.points, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.points, "", new { @class = "text-danger" })


                    </div>


                </div>
            </div>


        </div>






        <div class="row">
            <div class="col-sm-6">
                <div class="card  animated bounceInUp" @*id="wholeForm"*@ style="border-collapse: collapse; border: 1px solid white">
                    <div class="card-block" style="box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);">



                        @Html.LabelFor(model => model.q1)
                        @Html.EditorFor(model => model.q1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.q1, "", new { @class = "text-danger" })

                        @Html.LabelFor(model => model.a1)
                        @Html.EditorFor(model => model.a1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.a1, "", new { @class = "text-danger" })

                        @Html.LabelFor(model => model.d1)
                        @Html.EditorFor(model => model.d1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.d1, "", new { @class = "text-danger" })
                        <br />
                    </div>
                </div>
            </div>
            <div class="col-md-offset-6">
                <div class="card  animated bounceInUp" @*id="wholeForm"*@ style="border-collapse: collapse; border: 1px solid white">
                    <div class="card-block" style="box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);">



                        @Html.LabelFor(model => model.q2)
                        @Html.EditorFor(model => model.q2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.q2, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => model.a2)
                        @Html.EditorFor(model => model.a2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.a2, "", new { @class = "text-danger" })
                        @Html.LabelFor(model => model.d2)
                        @Html.EditorFor(model => model.d2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.d2, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-sm-6">
                <div class="card  animated bounceInUp" @*id="wholeForm"*@ style="border-collapse: collapse; border: 1px solid white">
                    <div class="card-block" style="box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);">



                        @Html.LabelFor(model => model.q3)
                        @Html.EditorFor(model => model.q3, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.q3, "", new { @class = "text-danger" })

                        @Html.LabelFor(model => model.a3)
                        @Html.EditorFor(model => model.a3, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.a3, "", new { @class = "text-danger" })

                        @Html.LabelFor(model => model.d3)
                        @Html.EditorFor(model => model.d3, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.d3, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="col-md-offset-6">
                <div class="card  animated bounceInUp" @*id="wholeForm"*@ style="border-collapse: collapse; border: 1px solid white">
                    <div class="card-block" style="box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);">


                        @Html.LabelFor(model => model.q4)
                        @Html.EditorFor(model => model.q4, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.q4, "", new { @class = "text-danger" })


                        @Html.LabelFor(model => model.a4)
                        @Html.EditorFor(model => model.a4, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.a4, "", new { @class = "text-danger" })



                        @Html.LabelFor(model => model.d4)
                        @Html.EditorFor(model => model.d4, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.d4, "", new { @class = "text-danger" })

                    </div>
                </div>

            </div>

        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.examId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.examId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.examId, "", new { @class = "text-danger" })
            </div>
        </div>






        <div class="form-group">
            <div class="col-md-offset-2 col-md-12">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>

    </form>

}

<iframe width="800" height="600" src="https://app.powerbi.com/view?r=eyJrIjoiZGQ1OTkxMDQtMjY0ZC00N2YxLWI5MWQtZDY0NDc3MDRkMjI5IiwidCI6IjkyNDU0MzM1LTU2NGUtNGNjZi1iMGIwLTI0NDQ1YjhjMDNmNyIsImMiOjh9" frameborder="0" allowFullScreen="true"></iframe>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
